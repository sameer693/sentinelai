version: '3.8'

services:
  sentinelai:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    restart: unless-stopped
    ports:
      - "8080:8080"   # Management API
      - "9090:9090"   # Metrics endpoint
    environment:
      - APP_ENV=production
      - LOG_LEVEL=info
      - INTERFACE=eth0
      - PORT=8080
    volumes:
      - ./configs:/app/configs:ro
      - ./models:/app/models:ro
      - sentinelai_logs:/app/logs
      - sentinelai_data:/app/data
    networks:
      - sentinelai_network
    cap_add:
      - NET_ADMIN
      - NET_RAW
    security_opt:
      - no-new-privileges:true
    depends_on:
      - prometheus
      - grafana

  prometheus:
    image: prom/prometheus:v2.45.0
    restart: unless-stopped
    ports:
      - "9091:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./configs/rules:/etc/prometheus/rules:ro
      - prometheus_data:/prometheus
    networks:
      - sentinelai_network

  grafana:
    image: grafana/grafana-oss:10.1.0
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=sentinelai123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./configs/provisioning:/etc/grafana/provisioning:ro
    networks:
      - sentinelai_network
    depends_on:
      - prometheus

  # Redis for caching and session storage (optional)
  redis:
    image: redis:7.0-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - sentinelai_network

  # ML Model Server (for future integration)
  model-server:
    image: tensorflow/serving:2.13.0
    restart: unless-stopped
    ports:
      - "8501:8501"   # REST API
      - "8500:8500"   # gRPC API
    environment:
      - MODEL_NAME=sentinelai_cnn
      - MODEL_BASE_PATH=/models
    volumes:
      - ./models:/models:ro
    networks:
      - sentinelai_network
    profiles:
      - ml

volumes:
  sentinelai_logs:
  sentinelai_data:
  prometheus_data:
  grafana_data:
  redis_data:

networks:
  sentinelai_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
